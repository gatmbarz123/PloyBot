name: "GitHub Actions terraform build "

on:
  push:
    branches:
      - CI-Terraform


jobs: 
  Terraform:
    runs-on: ubuntu-latest      
    

    defaults:
      run:
        working-directory: infrastructure
    
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v3
      
      
      - name: Setup Terrafrom 
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.0
     
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      
      - name: List Infrastructure Directory
        run: ls -la 
 
      - name: Terraform Init 
        run: terraform init
        
      - name: Terraform Plan
        run: |  
          terraform plan \
          -var="certificate_arn=${CERTIFICATE_ARN}" \
          -var="private_key=${PRIVATE_KEY}" \
          -var="aws_region=$(AWS_REGION)" 
        env:  
          CERTIFICATE_ARN: ${{ secrets.CERTIFICATE_ARN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}

      
      - name: Terraform Apply
        if: github.ref == 'refs/heads/CI-Terraform' && github.event_name == 'push'
        run: | 
          terraform apply \
          -var="certificate_arn=${CERTIFICATE_ARN}" \
          -var="private_key=${PRIVATE_KEY}" \
          -var="aws_region=$(AWS_REGION)" \
          -auto-approve
        env:
          CERTIFICATE_ARN: ${{ secrets.CERTIFICATE_ARN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: Capture Terraform Outputs
        id: capture-outputs
        run: |
          echo "TF_IPS=$(terraform output -json instance_public_ips)" >> $GITHUB_ENV
          echo "TF_DYNAMODB_TABLE=$(terraform output -raw dynamodb_name)" >> $GITHUB_ENV
          echo "TF_SQS_URL=$(terraform output -raw sqs_url)" >> $GITHUB_ENV
          echo "TF_S3_NAME=$(terraform output -raw s3_name)" >> $GITHUB_ENV
          echo "TF_ALB_URL=$(terraform output -raw alb_url)" >> $GITHUB_ENV
          
    outputs:
      ips: ${{ steps.capture-outputs.outputs.TF_IPS }}
      dynamodb_table_name: ${{ steps.capture-outputs.outputs.TF_DYNAMODB_TABLE }}
      sqs_queue_name: ${{ steps.capture-outputs.outputs.TF_SQS_URL }}
      s3_bucket_name: ${{ steps.capture-outputs.outputs.TF_S3_NAME }}
      alb_url: ${{ steps.capture-outputs.outputs.TF_ALB_URL }}
  
    
  Ansible:
    runs-on: ubuntu-latest
    needs : Terraform
    defaults:
      run:
        working-directory: infrastructure/ansible

    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v3
      
      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible
      
      - name: Create Ansible Inventory
        run: |
          echo "[servers]" > inventory.ini
          echo "${{ env.TF_IPS }}" | jq -r '.[]' >> inventory.ini
        shell: bash

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i inventory.ini playbook.yml \
          --extra-vars "dynamodb_table_name=${{ env.TF_DYNAMODB_TABLE }} \
          sqs_queue_name=${{ env.TF_SQS_URL }} \
          s3_bucket_name=${{ env.TF_S3_NAME }} \
          alb_url=${{ env.TF_ALB_URL }}"


      






      


      

